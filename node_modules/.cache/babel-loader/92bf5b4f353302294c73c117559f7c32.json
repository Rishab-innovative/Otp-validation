{"ast":null,"code":"var _jsxFileName = \"/home/champ/Desktop/REACT/PhoneV/task/src/Verify.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect, useLayoutEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Verify() {\n  _s();\n\n  const [otp, setOtp] = useState(\"\");\n  useEffect(() => {\n    var _document$getElementB;\n\n    (_document$getElementB = document.getElementById(`otp0`)) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.focus();\n  }, []);\n  useLayoutEffect(() => {\n    var _document$getElementB2;\n\n    (_document$getElementB2 = document.getElementById(`otp0`)) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.focus();\n  }, []); // this function sets the focus of the input based on the otp size.\n\n  const setFocus = index => {\n    var _document$getElementB3;\n\n    (_document$getElementB3 = document.getElementById(`otp${index}`)) === null || _document$getElementB3 === void 0 ? void 0 : _document$getElementB3.focus();\n  }; // this function updates the otp\n\n\n  const updateOtp = (e, index) => {\n    const val = parseInt(e.target.value);\n    if (val < 0 && val > 9) return; // Special case for 'e', since e stands for another number.\n\n    if (!val) return;\n    const currentOtpDigits = otp.slice().split(\"\");\n    currentOtpDigits[index] = val;\n    const newOtp = currentOtpDigits.join(\"\");\n    setOtp(newOtp);\n    setFocus(index + 1);\n  };\n\n  const handleKeyPress = (e, index) => {\n    if (e.keyCode === 8) {\n      var _document$getElementB4;\n\n      index -= 1;\n      const currentOtpDigits = otp.slice().split(\"\");\n      currentOtpDigits[index + 1] = \" \";\n      const newOtp = currentOtpDigits.join(\"\");\n      setOtp(newOtp);\n      (_document$getElementB4 = document.getElementById(`otp${index}`)) === null || _document$getElementB4 === void 0 ? void 0 : _document$getElementB4.select();\n    } // Left navigation\n\n\n    if (e.keyCode === 37) {\n      var _document$getElementB5;\n\n      (_document$getElementB5 = document.getElementById(`otp${index - 1}`)) === null || _document$getElementB5 === void 0 ? void 0 : _document$getElementB5.select();\n    } // Right Navigation\n\n\n    if (e.keyCode === 39) {\n      var _document$getElementB6;\n\n      (_document$getElementB6 = document.getElementById(`otp${index + 1}`)) === null || _document$getElementB6 === void 0 ? void 0 : _document$getElementB6.select();\n    }\n  };\n\n  const renderInputs = () => {\n    const inputs = [];\n\n    for (let i = 0; i <= 5; i++) {\n      inputs.push( /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        maxLength: \"1\",\n        onChange: e => updateOtp(e, i),\n        onKeyDown: e => handleKeyPress(e, i),\n        value: otp === null || otp === void 0 ? void 0 : otp[i],\n        id: `otp${i}`\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this));\n    }\n\n    return inputs;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Line1\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Phone Verification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: \"Enter the OTP you received on 12345-XXXXX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"otp\",\n        children: renderInputs()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"change\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Change Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"resend\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Re-send OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"verify-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Verify Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Verify, \"58L7OGfSKKnyty2e6xr4YO7JVSc=\");\n\n_c = Verify;\nexport default Verify;\n\nvar _c;\n\n$RefreshReg$(_c, \"Verify\");","map":{"version":3,"sources":["/home/champ/Desktop/REACT/PhoneV/task/src/Verify.js"],"names":["useState","useEffect","useLayoutEffect","Verify","otp","setOtp","document","getElementById","focus","setFocus","index","updateOtp","e","val","parseInt","target","value","currentOtpDigits","slice","split","newOtp","join","handleKeyPress","keyCode","select","renderInputs","inputs","i","push"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect, useLayoutEffect } from \"react\";\n\nfunction Verify() {\n  const [otp, setOtp] = useState(\"\");\n\n  useEffect(() => {\n    document.getElementById(`otp0`)?.focus();\n  }, []);\n\n  useLayoutEffect(() => {\n    document.getElementById(`otp0`)?.focus();\n  }, []);\n\n  // this function sets the focus of the input based on the otp size.\n  const setFocus = (index) => {\n    document.getElementById(`otp${index}`)?.focus();\n  };\n\n  // this function updates the otp\n  const updateOtp = (e, index) => {\n    const val = parseInt(e.target.value);\n\n    if (val < 0 && val > 9) return;\n    // Special case for 'e', since e stands for another number.\n    if (!val) return;\n    const currentOtpDigits = otp.slice().split(\"\");\n    currentOtpDigits[index] = val;\n    const newOtp = currentOtpDigits.join(\"\");\n    setOtp(newOtp);\n    setFocus(index + 1);\n  };\n\n  const handleKeyPress = (e, index) => {\n    if (e.keyCode === 8) {\n      index -= 1;\n      const currentOtpDigits = otp.slice().split(\"\");\n      currentOtpDigits[index + 1] = \" \";\n      const newOtp = currentOtpDigits.join(\"\");\n      setOtp(newOtp);\n      document.getElementById(`otp${index}`)?.select();\n    }\n\n    // Left navigation\n    if (e.keyCode === 37) {\n      document.getElementById(`otp${index - 1}`)?.select();\n    }\n    // Right Navigation\n    if (e.keyCode === 39) {\n      document.getElementById(`otp${index + 1}`)?.select();\n    }\n  };\n\n  const renderInputs = () => {\n    const inputs = [];\n    for (let i = 0; i <= 5; i++) {\n      inputs.push(\n        <input\n          type=\"number\"\n          key={i}\n          maxLength=\"1\"\n          onChange={(e) => updateOtp(e, i)}\n          onKeyDown={(e) => handleKeyPress(e, i)}\n          value={otp?.[i]}\n          id={`otp${i}`}\n        />\n      );\n    }\n    return inputs;\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <div className=\"Line1\">\n          <h1>Phone Verification</h1>\n        </div>\n        <hr />\n        <div className=\"text\">Enter the OTP you received on 12345-XXXXX</div>\n        <div className=\"otp\">{renderInputs()}</div>\n        <div className=\"options\">\n          <span className=\"change\">\n            <p>Change Number</p>\n          </span>\n          <span className=\"resend\">\n            <p>Re-send OTP</p>\n          </span>\n        </div>\n        <div className=\"verify-btn\">\n          <button>Verify Phone Number</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Verify;\n"]},"metadata":{},"sourceType":"module"}